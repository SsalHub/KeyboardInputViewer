/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'edu.sc.seis.launch4j' version '2.5.1'
	id 'com.github.spotbugs' version '5.0.14'
	id 'jacoco'
}

sourceSets{
	main {
		java.srcDirs = ['src']
		resources.srcDirs = ['resources']
	}

    locallib {
		java.srcDirs = ['locallib']
		resources.srcDirs = ['resources']
    }

	test {
		java.srcDirs = ['test']
		resources.srcDirs = ['test']
	}
}

application {
    // Define the main class for the application.
    mainClass = 'main.ssalhub.kiv.Main'
}

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8
javadoc.options.memberLevel = JavadocMemberLevel.PRIVATE
group = 'main.ssalhub.kiv'
// ext.artifact = 'keyboardinputviewer'
// shadowJar.archiveName = 'KeyboardInputViewer-v' + version + '.jar'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    // Jnativehook
    implementation 'com.github.kwhat:jnativehook:2.2.2'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
